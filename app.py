import streamlit as st
from ingestion import run_llm
from streamlit_chat import message

st.set_page_config(page_title="Geregè", page_icon=":robot_face:")
st.header("Geregè Chat Bot")

password_secret = st.secrets.get("PASSWORD")

if password_secret is None:
    st.error("Required secrets are missing. Please check your secrets configuration.")
    st.stop()

password = st.text_input("Enter password:", type="password")
if password != password_secret.get("password"):
    st.error("Reach out to @zach_arslan on Telegram for access")
    st.stop()

    
# Leveraging Streamlit session_state, which will work as memory in our case. It is unique for each session.
if "user_prompt_history" not in st.session_state:
    st.session_state["user_prompt_history"] = []

if "chat_answers_history" not in st.session_state:
    st.session_state["chat_answers_history"] = []

if "chat_history" not in st.session_state:
    st.session_state["chat_history"] = []

def input_change():
    prompt = st.session_state.input
    if prompt:
        generated_response = run_llm(
            query=prompt, chat_history=st.session_state["chat_history"]
        )

        st.session_state["user_prompt_history"].append(prompt)  # Appending user input (prompt)
        st.session_state["chat_answers_history"].append(generated_response["answer"])  # Appending LLM answer
        st.session_state["chat_history"].append((prompt, generated_response["answer"]))  # Combining both into one empty list, which includes a tuple that takes a string as 1st input & Str 2nd.

# If responses have been generated by the model
if st.session_state["chat_answers_history"]:
    # Reverse iteration through the list
    for i in range(len(st.session_state["chat_answers_history"]) - 1, -1, -1):
        # Display user's query
        message(
            st.session_state["user_prompt_history"][::-1][i],
            is_user=True,
            key=f"user_msg_{i}",
            avatar_style="croodles-neutral",
        )
        # Display ChatBot's response
        message(
            st.session_state["chat_answers_history"][::-1][i],
            key=f"bot_msg_{i}",
        )

user_input = st.text_input("Prompt", placeholder="Enter your question here...", key="input", on_change=input_change)

# Add a "Clear Chat" button
if st.button("Clear Chat"):
    st.session_state["user_prompt_history"] = []
    st.session_state["chat_answers_history"] = []
    st.session_state["chat_history"] = []
    st.experimental_rerun()
